<?php
/**
 * Show the list of references created
 *
 * @author		Albert Pï¿œrez Monfort (intraweb@xtec.cat)
 * @return		The list the references created
 */
 
function iw_webbox_admin_main()
{
	$dom=ZLanguage::getModuleDomain('iw_webbox');
	// Security check
	if (!SecurityUtil::checkPermission('iw_webbox::', "::", ACCESS_ADMIN)) {
		return LogUtil::registerError(__('Sorry! No authorization to access this module.', $dom), 403);
	}

	// Create output object
	$pnRender = pnRender::getInstance('iw_webbox',false);
	
	// Get records from the database
	$iw_webbox = pnModAPIFunc('iw_webbox','user','getall');
	
	$pnRender->assign('iw_webbox',$iw_webbox);
	
	// Return the output generated
	return $pnRender->fetch('iw_webbox_admin_main.htm');
}

/**
 * Show the from necessari to create a new reference
 *
 * @author		Albert Pï¿œrez Monfort (intraweb@xtec.cat)
 * @return		The form for create a new reference
 */
function iw_webbox_admin_new()
{
	$dom=ZLanguage::getModuleDomain('iw_webbox');
	// Security check
	if (!SecurityUtil::checkPermission('iw_webbox::', "::", ACCESS_ADD)) {
		return LogUtil::registerError(__('Sorry! No authorization to access this module.', $dom), 403);
	}
		
	// Create output object
	$pnRender = pnRender::getInstance('iw_webbox',false);

	// Return the output generated
	return $pnRender->fetch('iw_webbox_admin_new.htm');
}

/**
 * Create a new reference
 *
 * @author       Albert Pï¿œrez Monfort (intraweb@xtec.cat)
 * @param        args	Array with the values post from the formulari
 */
function iw_webbox_admin_create($args)
{
	$dom=ZLanguage::getModuleDomain('iw_webbox');
	// Get parameters from whatever input we need
	$webbox = FormUtil::getPassedValue('webbox', isset($args['webbox']) ? $args['webbox'] : null, 'POST');
	// Security check
	if (!SecurityUtil::checkPermission( 'iw_webbox::', "$pid::", ACCESS_ADD)) {
		return LogUtil::registerPermissionError();
	}
	// Confirm authorisation code
	if (!SecurityUtil::confirmAuthKey()) {
		return LogUtil::registerAuthidError (pnModURL('iw_webbox', 'admin', 'main'));
	}
	// get the given reference
	$ref = pnModAPIFunc('iw_webbox', 'user', 'getref',
						 array('ref' => $webbox['ref']));
	if ($ref) {
		LogUtil::registerError (__('The given reference exists. Choose a different name for the reference.', $dom));
		return pnRedirect(pnModURL('iw_webbox', 'admin', 'new'));
	}
	// avoid extrange characters in the ref. Only valid az-09 
	if(preg_match("/[^A-Za-z0-9]/", $webbox['ref'])) {
		LogUtil::registerError (__('The given reference contain no valid characters.', $dom));
		return pnRedirect(pnModURL('iw_webbox', 'admin', 'new'));
    }
	$lid = pnModAPIFunc('iw_webbox','admin','create',$webbox);
	if ($lid != false) {
		// Success
		LogUtil::registerStatus (__('A new URL reference has been created', $dom));		
	}
	return pnRedirect(pnModURL('iw_webbox', 'admin', 'main'));
}

/**
 * Show the from necessari to modify a reference
 *
 * @author		Albert Pï¿œrez Monfort (intraweb@xtec.cat)
 * @param		pid (required)	Id of the reference that have to be modified
 * @return		The form for modify a reference
 */
function iw_webbox_admin_modify($args)
{
	$dom=ZLanguage::getModuleDomain('iw_webbox');
	$pid = FormUtil::getPassedValue('pid', isset($args['pid']) ? $args['pid'] : null, 'GET');

	// Get the reference information
	$item = pnModAPIFunc('iw_webbox', 'user', 'get', array('pid' => $pid));
	if (!$item) {
		// Not reference has been found
		return LogUtil::registerError (__('No such item found.', $dom), 404);
	}
	// Security check
	if (!SecurityUtil::checkPermission( 'iw_webbox::', "$pid::", ACCESS_EDIT)) {
		return LogUtil::registerPermissionError();
	}
	// Create output object
	$pnRender = pnRender::getInstance('iw_webbox', false);
	// Assign the item
	$pnRender->assign($item);
	// Return the output that has been generated by this function
	return $pnRender->fetch('iw_webbox_admin_edit.htm');	
}

/**
 * update the reference
 *
 * @author       Albert Pï¿œrez Monfort (intraweb@xtec.cat)
 * @param        args	The reference values posted from the form
 */
function iw_webbox_admin_update($args)
{
	$dom=ZLanguage::getModuleDomain('iw_webbox');
	$webbox = FormUtil::getPassedValue('webbox', isset($args['webbox']) ? $args['webbox'] : null, 'POST');
	// Security check
	if (!SecurityUtil::checkPermission( 'iw_webbox::', "$pid::", ACCESS_EDIT)) {
		return LogUtil::registerPermissionError();
	}
	// Confirm authorisation code
	if (!SecurityUtil::confirmAuthKey()) {
		return LogUtil::registerAuthidError (pnModURL('iw_webbox', 'admin', 'main'));
	}
	// get the given reference
	$ref = pnModAPIFunc('iw_webbox', 'user', 'getref',
						 array('ref' => $webbox['ref']));
	if ($ref && $ref['pid'] != $webbox['pid']) {
		LogUtil::registerError (__('The given reference exists. Choose a different name for the reference.', $dom));
		return pnRedirect(pnModURL('iw_webbox', 'admin', 'main'));
	}
	// avoid extrange characters in the ref. Only valid az-09 
	if(preg_match("/[^A-Za-z0-9]/", $webbox['ref'])) {
		LogUtil::registerError (__('The given reference contain no valid characters.', $dom));
		return pnRedirect(pnModURL('iw_webbox', 'admin', 'main'));
    }
	// Update URL reference
	if (pnModAPIFunc('iw_webbox', 'admin', 'update', $webbox)) {
		// Success
		LogUtil::registerStatus (__('URL reference updated', $dom));
	}

	return pnRedirect(pnModURL('iw_webbox', 'admin', 'main'));
}

/**
 * Delete a reference
 *
 * @author       Albert Pï¿œrez Monfort (intraweb@xtec.cat)
 * @param        pid	Id of the reference that has to be deleted
 */
function iw_webbox_admin_delete($args){
	$dom=ZLanguage::getModuleDomain('iw_webbox');
	$pid = FormUtil::getPassedValue('pid', isset($args['pid']) ? $args['pid'] : null, 'REQUEST');
	$confirmation = FormUtil::getPassedValue('confirmation', null, 'POST');

	// Get the URL reference
	$item = pnModAPIFunc('iw_webbox','user','get',array('pid' => $pid));

	if (!$item) {
		return LogUtil::registerError (__('URL not found', $dom), 404);
	}
	// Security check
	if (!SecurityUtil::checkPermission( 'iw_webbox::', "$pid::", ACCESS_DELETE)) {
		return LogUtil::registerError(__('Sorry! No authorization to access this module.', $dom), 403);
	}

	// Check for confirmation.
	if (empty($confirmation)) {
        	// No confirmation yet
        	// Create output object
		$pnRender = pnRender::getInstance('iw_webbox',false);
		// Add a hidden field for the item ID to the output
		$pnRender->assign('pid', $item['pid']);
		//Add the URL reference value
		$pnRender->assign('ref', $item['ref']);
		// Return the output generated
		return $pnRender->fetch('iw_webbox_admin_delete.htm');
	}

	// Confirmed the action
	// Confirm authorisation code
	if (!SecurityUtil::confirmAuthKey()) {
		return LogUtil::registerAuthidError (pnModURL('iw_webbox', 'admin', 'main'));
	}

	// delete the faq
	if (pnModAPIFunc('iw_webbox', 'admin', 'delete', array('pid' => $pid))) {
		// Success
		LogUtil::registerStatus (__('URL reference removed', $dom));
	}

	return pnRedirect(pnModURL('iw_webbox', 'admin', 'main'));
}

/**
 * Modify the configuration of the module
 *
 * @author       Albert Pï¿œrez Monfort (intraweb@xtec.cat)
 * @return       output       The configuration form
 */
function iw_webbox_admin_conf()
{
	// Security check
    if (!SecurityUtil::checkPermission( 'iw_webbox::', "::", ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError();
    }

    $item = array('url' => pnModGetVar('iw_webbox', 'url'),
					'width' => pnModGetVar('iw_webbox', 'width'),
					'height' => pnModGetVar('iw_webbox', 'height'),
					'scrolls' => pnModGetVar('iw_webbox', 'scrolls'),
					'widthunit' => pnModGetVar('iw_webbox', 'widthunit'));

    // Create output object
    $pnRender = pnRender::getInstance('iw_webbox', false);

    // Assign the item
    $pnRender->assign($item);

    return $pnRender->fetch('iw_webbox_admin_config.htm');
}

/**
 * Update configuration
 *
 * @author      Albert Pï¿œrez Monfort (intraweb@xtec.cat)
 * @param       The values posted from the form
 */
function iw_webbox_admin_update_conf($args)
{
    $dom=ZLanguage::getModuleDomain('iw_webbox');
	// Get the values posted
    $webbox = FormUtil::getPassedValue('webbox', isset($args['webbox']) ? $args['webbox'] : null, 'POST');

    // Security check
    if (!SecurityUtil::checkPermission( 'iw_webbox::', "::", ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError();
    }
	
    // Confirm authorisation code
    if (!SecurityUtil::confirmAuthKey()) {
        return LogUtil::registerAuthidError (pnModURL('FAQ', 'admin', 'view'));
    }

    // Set module vars
    pnModSetVar('iw_webbox', 'url', $webbox['url']);
	pnModSetVar('iw_webbox', 'width',$webbox['width']);
    pnModSetVar('iw_webbox', 'height',$webbox['height']);
    pnModSetVar('iw_webbox', 'scrolls',$webbox['scrolls']);
    pnModSetVar('iw_webbox', 'widthunit',$webbox['widthunit']);

    LogUtil::registerStatus (__('Done! Module configuration updated.', $dom));

    return pnRedirect(pnModURL('iw_webbox', 'admin', 'main'));
}

/**
 * Show the information about the module
 * @author:     Albert Pï¿œrez Monfort (aperezm@xtec.cat)
 * @return:	The information about this module
*/
function iw_webbox_admin_module($args){
	// Create output object
	$pnRender = pnRender::getInstance('iw_webbox',false);

	$module = pnModFunc('iw_main', 'user', 'module_info', array('module_name' => 'iw_webbox',
									'type' => 'admin'));

	$pnRender -> assign('module', $module);
	return $pnRender -> fetch('iw_webbox_admin_module.htm');
}
